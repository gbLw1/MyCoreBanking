@page "/transacoes/{Id:guid}"
@using System.Globalization;

<!-- Título -->
<div class="d-flex justify-content-center align-items-center">
    <p class="m-0 h2 text-dark">Edição da Transação</p>
</div>

<hr />

@if (pageReady)
{
    <div class="d-flex justify-content-center">
        <!-- Área do Formulário -->
        <div class="col-12 col-lg-9 col-xl-7 mb-4">
            <div class="card shadow-lg o-hidden border-0">
                <div class="pt-5 px-5">
                    <EditForm Model="args" OnValidSubmit="OnValidSubmit">
                        <FluentValidationValidator />
                        <ValidationSummary />

                        <div class="row mb-3">
                            <!-- Tipo de operação -->
                            <div class="col-sm-6 mb-3 mb-sm-0">
                                <p class="m-0 text-dark">Tipo de operação</p>
                                <select disabled class="form-select disabled">
                                    <option value="@model.TipoOperacao">@model.TipoOperacao</option>
                                </select>
                            </div>
                            <!-- Tipo de transação -->
                            <div class="col-sm-6 mb-3 mb-sm-0">
                                <p class="m-0 text-dark">Tipo de transação</p>
                                <select disabled class="form-select disabled">
                                    <option value="@model.TipoTransacao">@MyCoreBankingApp.ConverterEnumTipoTransacaoParaString(model.TipoTransacao)</option>
                                </select>
                            </div>
                        </div>

                        @if (model.TipoTransacao == TransacaoTipo.Unica)
                        {
                            <div class="row mb-3">
                                <!-- Categoria -->
                                <div class="col-sm-6 mb-3 mb-sm-0">
                                    <p class="m-0 text-dark">Categoria</p>
                                    <InputSelect @bind-Value="args.Categoria" class="form-select">
                                        @foreach (Categoria categoria in Enum.GetValues<Categoria>())
                                        {
                                            <option value="@categoria">@MyCoreBankingApp.ConverterEnumCategoriaParaString(categoria)</option>
                                        }
                                    </InputSelect>
                                </div>
                                <!-- Meio de pagamento -->
                                <div class="col-sm-6 mb-3 mb-sm-0">
                                    <p class="m-0 text-dark">Meio de pagamento</p>
                                    <InputSelect @bind-Value="args.MeioPagamento" class="form-select">
                                        @foreach (MeioPagamentoTipo meioPagamento in Enum.GetValues<MeioPagamentoTipo>())
                                        {
                                            <option value="@meioPagamento">@MyCoreBankingApp.ConverterEnumMeioPagamentoParaString(meioPagamento)</option>
                                        }
                                    </InputSelect>
                                </div>
                            </div>
                        }
                        @if (model.TipoTransacao == TransacaoTipo.Parcelada)
                        {
                            <div class="row mb-3">
                                <!-- Categoria -->
                                <div class="col-sm-6 mb-3 mb-sm-0">
                                    <p class="m-0 text-dark">Categoria</p>
                                    <select disabled class="form-select disabled">
                                        <option value="@args.Categoria">@MyCoreBankingApp.ConverterEnumCategoriaParaString(args.Categoria)</option>
                                    </select>
                                </div>
                                <!-- Meio de pagamento -->
                                <div class="col-sm-6 mb-3 mb-sm-0">
                                    <p class="m-0 text-dark">Meio de pagamento</p>
                                    <select disabled class="form-select disabled">
                                        <option value="@args.MeioPagamento">@MyCoreBankingApp.ConverterEnumMeioPagamentoParaString(args.MeioPagamento)</option>
                                    </select>
                                </div>
                            </div>
                        }

                        <!-- Descrição -->
                        <div class="mb-3">
                            <p class="m-0 text-dark">Descrição</p>
                            <InputText @bind-Value="args.Descricao" class="form-control" placeholder="Descrição" maxlength="30" />
                        </div>

                        <!-- Observação -->
                        <div class="mb-3">
                            <p class="m-0 text-dark">Observação</p>
                            <InputText @bind-Value="args.Observacao" class="form-control" placeholder="Observação" />
                        </div>

                        <!-- Data da transação -->
                        <div class="mb-3">
                            @if (model.TipoTransacao == TransacaoTipo.Unica)
                            {
                                <p class="m-0 text-dark">Data da transação</p>
                                <InputDate @bind-Value="args.DataTransacao" class="form-control" placeholder="Data da transação" />
                            }
                            @if (model.TipoTransacao == TransacaoTipo.Parcelada)
                            {
                                <p class="m-0 text-dark">Data de vencimento</p>
                                <InputDate @bind-Value="args.DataTransacao" class="form-control" placeholder="Data de vencimento" />
                            }
                        </div>

                        <!-- Valor: Unica -->
                        @if (model.TipoTransacao == TransacaoTipo.Unica)
                        {
                            <div class="mb-3">
                                <p class="m-0 text-dark">Valor</p>
                                <div class="d-flex align-items-center">
                                    <p class="m-0 me-2 h5 text-dark">R$ </p>
                                    <InputNumber @bind-Value="args.Valor" class="form-control" placeholder="Valor da transação" />
                                </div>
                            </div>
                        }

                        <!-- Valor: Parcelada -->
                        @if (model.TipoTransacao == TransacaoTipo.Parcelada)
                        {
                            <div class="mb-3">
                                <p class="m-0 text-dark">Valor da parcela</p>
                                <div class="d-flex align-items-center">
                                    <p class="m-0 me-2 h5 text-dark">R$ </p>
                                    <InputNumber @bind-Value="args.Valor" class="form-control" placeholder="Valor da parcela" />
                                </div>
                            </div>
                        }

                        <div class="row mt-4">
                            <!-- Switch: Efetivada -->
                            <div class="col-sm-6 mb-3 mb-sm-0 d-flex justify-content-center flex-column">
                                <div class="form-check form-switch cursor-pointer p-0 d-flex align-items-center" style="font-size: 1.2rem">
                                    <input @bind-value="Efetivada" type="checkbox" checked="@Efetivada"
                                           role="switch" id="transacaoEfetivada"
                                           class="form-check-input cursor-pointer m-0 me-2"
                                           style="width: 60px;height: 30px;">
                                    <label class="form-check-label" for="transacaoEfetivada">Foi @(model.TipoOperacao == OperacaoTipo.Despesa ? "paga" : "recebida")</label>
                                </div>
                            </div>
                            <!-- Data efetivação -->
                            @if (Efetivada)
                            {
                                <div class="col-sm-6 mb-3 mb-sm-0">
                                    <p class="m-0 text-dark">Data do @(model.TipoOperacao == OperacaoTipo.Despesa ? "pagamento" : "recebimento")</p>
                                    <InputDate min="0" @bind-Value="args.DataEfetivacao" class="form-control" placeholder="Data da efetivação" />
                                </div>
                            }
                        </div>

                        <FormButtons CancelRedirect="/transacoes" SubmitText="Salvar alterações" />

                        <hr>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <div class="d-flex justify-content-center align-items-center" style="min-height: 50vh;">
        <Spinner Size="50px" />
    </div>
}

@code {

    [Parameter] public Guid Id { get; set; }

    TransacoesPutArgs? args;
    TransacaoModel? model;
    bool pageReady => model is not null && args is not null;
    public bool Efetivada { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        await CarregarTransacao();
    }

    async Task CarregarTransacao()
    {
        var result = await MyCoreBankingApp.ObterTransacaoPorId(Id);

        if (result is not null)
        {
            model = result;
            args = new()
                {
                    Categoria = result.Categoria,
                    DataEfetivacao = result.DataEfetivacao,
                    DataTransacao = result.DataTransacao,
                    Descricao = result.Descricao,
                    MeioPagamento = result.MeioPagamento,
                    Observacao = result.Observacao,
                    Valor = result.Valor,
                };
            Efetivada = result.DataEfetivacao.HasValue;
        }
    }

    async Task OnValidSubmit()
    {
        switch (model.TipoTransacao)
        {
            case TransacaoTipo.Unica:
                await AlterarTransacao();
                break;

            case TransacaoTipo.Parcelada:
                if (args.DataTransacao.Month != model.DataTransacao.Month
                    || args.DataTransacao.Year != model.DataTransacao.Year)
                {
                    MyCoreBankingApp.ShowError("Você só pode alterar o dia da data de vencimento");
                    return;
                }

                var modalUpdateParcelamentoResult = await MyCoreBankingApp.ShowModal<UpdateParcelamentoModal>().Result;

                if (modalUpdateParcelamentoResult.Cancelled)
                {
                    return;
                }

                string? tipoUpdate = modalUpdateParcelamentoResult.Data!.ToString();

                if (args.DataTransacao.Day > 28 && tipoUpdate != "UNICO")
                {
                    MyCoreBankingApp.ShowError("Nem todos os meses suportam mais que 28 dias, informe o dia de vencimento entre 1 e 28");
                    return;
                }

                await AlterarTransacao(tipoUpdate);
                break;

            default:
                MyCoreBankingApp.ShowError("Não foi possível reconhecer o tipo da transação");
                break;
        }
    }

    async Task AlterarTransacao(string? tipoUpdate = null)
    {
        if (Efetivada && !args.DataEfetivacao.HasValue)
        {
            MyCoreBankingApp.ShowError("A data de efetivação é obrigatória");
            return;
        }

        if (!Efetivada)
        {
            args.DataEfetivacao = null;
        }

        var modalLoading = MyCoreBankingApp.ShowLoading();

        await MyCoreBankingApp.AlterarTransacao(transacaoId: Id, args: args, tipoUpdate: tipoUpdate);

        modalLoading.Close();
    }
}